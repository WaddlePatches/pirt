pirt v1.0
(See bottom of file for copyright)

== What is it? ==
pirt stands for Pdf Image Replacement Tool. It is designed to extract images
from PDFs, allowing you to process them how you see fit, then replace those
images into the original PDF file.

At the moment, pirt only extracts JPEG data from unencrypted PDFs. The JPEGs
are identified by a key "DCTDecode". Data extraction will still succeed on
encrypted PDFs, but only the raw, encrypted data will be extracted.

pirt is intended to be for personal use. It does not and will not decrypt PDFs.
Extracted images and modified PDFs are subject to the same copyrights as the
originals. Distribution of files generated by pirt should only be considered if
the original PDFs are not subject to copyright or licensing that restricts
distribution.

== How do I use it? ==
pirt is a commandline tool. It has two modes: extract mode and replace mode.
Neither is the default; you must specify explicitly which mode you want. In
both modes, the -d flag, followed by a target directory, and an input PDF are
mandatory. 

Commandline flags can be specified as follows:
  pirt [-h|--version]
   -h, --help    Display the help message
   --version     Display the version

  pirt [-fivv] -xd directory input.pdf
  pirt [-fivv] -rd directory input.pdf output.pdf
   -d directory  Where the JPEGs will be extracted to or replaced from
   -f            Overwrite output file without warning
   -i            Ask if output file exists [default]
   -r            Replace mode. Output file argument is mandatory
   -v            Verbose mode. Can be specified once or twice
   -x            Extract mode. Output file argument is forbidden

Extract mode is enabled by the -x flag:
  pirt -x -d directory input.pdf
This will extract all images identified as JPEGs in input.pdf to the given
directory, with the filename image-<object number>.jpg. WARNING: This will
overwrite any pre-existing files without asking, even if the -i flag is
specified.

Replace mode is enabled by the -r flag:
  pirt -rd directory input.pdf output.pdf
Each file in the given directory that matches the extracted filename format
(image-<object number>.jpg), where <object number> is a PDF object in
input.pdf, will be used to replace its respective stream data in input.pdf.
The width and height of the replacement image are calculated using the Python
Imaging Library (PIL). The resulting PDF is stored in output.pdf.

pirt will refuse to write to the output file if it detects that it is the same
as the input file. This is not a content-based check; it is designed to prevent
the output from conflicting with the input. As a result, pirt will not perform
in-place image replacement on the input file.

== Caveats ==
pirt attempts to preserve all structures, including object and dictionary key
orders, from the input PDF when creating the output PDF, with the exceptions
that it generates a new, flat xref table, and any non-structual PDF comments
are likely to be lost.

It is possible that pirt can cause junk in the output PDF, in particular if the
first non-header data in the input file is not an object.

pirt is not guaranteed to work with all PDF files, whether or not they are
standard or valid. Its output is not guaranteed to be reliable, correct, nor
valid. pirt is provided AS IS and although measures have been attempted to
restrict potential data loss, all liability for damages lies on the user.

== Distribution ==
pirt is distributed under the Non-Profit Open Software License as described at
the bottom of this file. In addition, there is an implementation of OrderedDict
by Raymod Hettinger included, from http://pypi.python.org/pypi/ordereddict/.
This is required for versions of Python less than 2.7. This class is
distributed under its own license, which is included in its source file.

Enjoy!

____________________________
Copyright (c) Ben Klein 2011
Licensed under the Non-Profit Open Software License version 3.0 except as
follows:
 a) The Original Copyright Holder (OCH) of the Original Work reserves the
   right to re-license or sub-license the Original Work or Derivative Works
   authored by OCH without limitation; and
 b) Licensor grants You the right to re-license the Original Work or
   Derivative Works thereof under the original OSL 3.0 as described in
   section 17 only if no revenue whatsoever is derived from the distribution
   of the Original Work or Derivative Works thereof, or from support or
   services relating thereto.
 See the included file LICENSE or visit:
 http://www.opensource.org/licenses/NOSL3.0

